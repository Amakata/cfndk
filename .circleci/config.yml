# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  test:
    docker:
      - image: circleci/ruby:2.4.1-node-browsers
    environment:
      PARALLEL_TESTS_CONCURRENCY: 4
    parallelism: 1
    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "~/repo/Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ~/repo/vendor/bundle
          key: v1-dependencies-{{ checksum "~/repo/Gemfile.lock" }}

      - restore_cache:
          keys:
            - v2-runtime-log-{{ .Branch }}-{{ .BuildNum }}
            - v2-runtime-log-{{ .Branch }}-
            - v2-runtime-log-

      # run tests!
      - run:
          name: run tests
          command: |
            export AWS_REGION=ap-northeast-1
            CFNDK_COVERAGE=1 bundle exec parallel_rspec \
              -n ${PARALLEL_TESTS_CONCURRENCY} \
              --runtime-log /home/circleci/repo/tmp/parallel_runtime_rspec.log \
              spec

      - save_cache:
          paths:
            - /home/circleci/repo/tmp/parallel_runtime_rspec.log
          key: v2-runtime-log-{{ .Branch }}-{{ .BuildNum }}
              
      # collect reports
      - store_test_results:
          path: /home/circleci/repo/tmp/parallel_runtime_rspec.log
      - store_artifacts:
          path: /home/circleci/repo/tmp/parallel_runtime_rspec.log
          destination: test-results/parallel_runtime_rspec.log
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_test_results:
          path: ~/repo/coverage
      - store_artifacts:
          path: ~/repo/coverage
          destination: test-coverage
workflows:
  version: 2
  my_workflow:
    jobs:
    - HOLD-TEST:
        type: approval
    - test:
        requires:
        - HOLD-TEST